"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _chalk = _interopRequireDefault(require("chalk"));

var _getRoutes = _interopRequireDefault(require("../static/getRoutes"));

var _generateBrowserPlugins = _interopRequireDefault(require("../static/generateBrowserPlugins"));

var _buildProductionBundles = _interopRequireDefault(require("../static/webpack/buildProductionBundles"));

var _getConfig = _interopRequireDefault(require("../static/getConfig"));

var _extractTemplates = _interopRequireDefault(require("../static/extractTemplates"));

var _generateTemplates = _interopRequireDefault(require("../static/generateTemplates"));

var _cleanProjectFiles = _interopRequireDefault(require("../static/cleanProjectFiles"));

var _copyPublicFiles = _interopRequireDefault(require("../static/copyPublicFiles"));

var _buildState = require("../static/buildState");

//
var _default = /*#__PURE__*/function () {
  var _bundle = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
    var state,
        _state,
        staging,
        debug,
        analyze,
        isBuildCommand,
        _args = arguments;

    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            state = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
            _state = state, staging = _state.staging, debug = _state.debug, analyze = _state.analyze, isBuildCommand = _state.isBuildCommand; // ensure ENV variables are set

            if (typeof process.env.NODE_ENV === 'undefined' && !debug) {
              process.env.NODE_ENV = 'production';
            }

            process.env.REACT_STATIC_ENV = 'production';
            process.env.BABEL_ENV = 'production';
            state.stage = 'prod';
            console.log("Bundling application for ".concat(staging ? 'Staging' : 'Production', "..."));
            console.log('');
            _context.next = 10;
            return (0, _getConfig["default"])(state);

          case 10:
            state = _context.sent;
            _context.next = 13;
            return (0, _cleanProjectFiles["default"])(state);

          case 13:
            state = _context.sent;
            _context.next = 16;
            return (0, _generateBrowserPlugins["default"])(state);

          case 16:
            state = _context.sent;
            _context.next = 19;
            return (0, _getRoutes["default"])(state);

          case 19:
            state = _context.sent;
            _context.next = 22;
            return (0, _extractTemplates["default"])(state);

          case 22:
            state = _context.sent;
            _context.next = 25;
            return (0, _generateTemplates["default"])(state);

          case 25:
            state = _context.sent;
            _context.next = 28;
            return (0, _copyPublicFiles["default"])(state);

          case 28:
            state = _context.sent;
            _context.next = 31;
            return (0, _buildProductionBundles["default"])(state);

          case 31:
            state = _context.sent;
            _context.next = 34;
            return (0, _buildState.outputBuildState)(state);

          case 34:
            state = _context.sent;

            if (!analyze) {
              _context.next = 38;
              break;
            }

            _context.next = 38;
            return new Promise(function () {});

          case 38:
            if (!isBuildCommand) {
              console.log("\nYour app is now bundled! Here's what we suggest doing next:\n\n- Export your app in staging mode to test locally\n  - ".concat(_chalk["default"].green('react-static export --stage'), "\n- Export your app in production mode for distribution\n  - ").concat(_chalk["default"].green('react-static export'), "\n- Analyze your app's webpack bundles\n  - ").concat(_chalk["default"].green('react-static bundle --analyze'), "\n"));
            }

            return _context.abrupt("return", state);

          case 40:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));

  function bundle() {
    return _bundle.apply(this, arguments);
  }

  return bundle;
}();

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kcy9idW5kbGUuanMiXSwibmFtZXMiOlsic3RhdGUiLCJzdGFnaW5nIiwiZGVidWciLCJhbmFseXplIiwiaXNCdWlsZENvbW1hbmQiLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9FTlYiLCJSRUFDVF9TVEFUSUNfRU5WIiwiQkFCRUxfRU5WIiwic3RhZ2UiLCJjb25zb2xlIiwibG9nIiwiUHJvbWlzZSIsImNoYWxrIiwiZ3JlZW4iLCJidW5kbGUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFUQTs7OEZBV2dCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBc0JBLFlBQUFBLEtBQXRCLDJEQUE4QixFQUE5QjtBQUFBLHFCQUNzQ0EsS0FEdEMsRUFDTkMsT0FETSxVQUNOQSxPQURNLEVBQ0dDLEtBREgsVUFDR0EsS0FESCxFQUNVQyxPQURWLFVBQ1VBLE9BRFYsRUFDbUJDLGNBRG5CLFVBQ21CQSxjQURuQixFQUVkOztBQUNBLGdCQUFJLE9BQU9DLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxRQUFuQixLQUFnQyxXQUFoQyxJQUErQyxDQUFDTCxLQUFwRCxFQUEyRDtBQUN6REcsY0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlDLFFBQVosR0FBdUIsWUFBdkI7QUFDRDs7QUFDREYsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlFLGdCQUFaLEdBQStCLFlBQS9CO0FBQ0FILFlBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxTQUFaLEdBQXdCLFlBQXhCO0FBRUFULFlBQUFBLEtBQUssQ0FBQ1UsS0FBTixHQUFjLE1BQWQ7QUFFQUMsWUFBQUEsT0FBTyxDQUFDQyxHQUFSLG9DQUM4QlgsT0FBTyxHQUFHLFNBQUgsR0FBZSxZQURwRDtBQUdBVSxZQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxFQUFaO0FBZGM7QUFBQSxtQkFnQkEsMkJBQVVaLEtBQVYsQ0FoQkE7O0FBQUE7QUFnQmRBLFlBQUFBLEtBaEJjO0FBQUE7QUFBQSxtQkFpQkEsbUNBQWtCQSxLQUFsQixDQWpCQTs7QUFBQTtBQWlCZEEsWUFBQUEsS0FqQmM7QUFBQTtBQUFBLG1CQWtCQSx3Q0FBdUJBLEtBQXZCLENBbEJBOztBQUFBO0FBa0JkQSxZQUFBQSxLQWxCYztBQUFBO0FBQUEsbUJBbUJBLDJCQUFVQSxLQUFWLENBbkJBOztBQUFBO0FBbUJkQSxZQUFBQSxLQW5CYztBQUFBO0FBQUEsbUJBb0JBLGtDQUFpQkEsS0FBakIsQ0FwQkE7O0FBQUE7QUFvQmRBLFlBQUFBLEtBcEJjO0FBQUE7QUFBQSxtQkFxQkEsbUNBQWtCQSxLQUFsQixDQXJCQTs7QUFBQTtBQXFCZEEsWUFBQUEsS0FyQmM7QUFBQTtBQUFBLG1CQXNCQSxpQ0FBZ0JBLEtBQWhCLENBdEJBOztBQUFBO0FBc0JkQSxZQUFBQSxLQXRCYztBQUFBO0FBQUEsbUJBdUJBLHdDQUF1QkEsS0FBdkIsQ0F2QkE7O0FBQUE7QUF1QmRBLFlBQUFBLEtBdkJjO0FBQUE7QUFBQSxtQkF3QkEsa0NBQWlCQSxLQUFqQixDQXhCQTs7QUFBQTtBQXdCZEEsWUFBQUEsS0F4QmM7O0FBQUEsaUJBMEJWRyxPQTFCVTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBLG1CQTJCTixJQUFJVSxPQUFKLENBQVksWUFBTSxDQUFFLENBQXBCLENBM0JNOztBQUFBO0FBOEJkLGdCQUFJLENBQUNULGNBQUwsRUFBcUI7QUFDbkJPLGNBQUFBLE9BQU8sQ0FBQ0MsR0FBUixtSUFJRUUsa0JBQU1DLEtBQU4sQ0FBWSw2QkFBWixDQUpGLDBFQU1FRCxrQkFBTUMsS0FBTixDQUFZLHFCQUFaLENBTkYseURBUUVELGtCQUFNQyxLQUFOLENBQVksK0JBQVosQ0FSRjtBQVVEOztBQXpDYSw2Q0EyQ1BmLEtBM0NPOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEc7O1dBQWVnQixNOzs7O1NBQUFBLE0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnXG4vL1xuaW1wb3J0IGdldFJvdXRlcyBmcm9tICcuLi9zdGF0aWMvZ2V0Um91dGVzJ1xuaW1wb3J0IGdlbmVyYXRlQnJvd3NlclBsdWdpbnMgZnJvbSAnLi4vc3RhdGljL2dlbmVyYXRlQnJvd3NlclBsdWdpbnMnXG5pbXBvcnQgYnVpbGRQcm9kdWN0aW9uQnVuZGxlcyBmcm9tICcuLi9zdGF0aWMvd2VicGFjay9idWlsZFByb2R1Y3Rpb25CdW5kbGVzJ1xuaW1wb3J0IGdldENvbmZpZyBmcm9tICcuLi9zdGF0aWMvZ2V0Q29uZmlnJ1xuaW1wb3J0IGV4dHJhY3RUZW1wbGF0ZXMgZnJvbSAnLi4vc3RhdGljL2V4dHJhY3RUZW1wbGF0ZXMnXG5pbXBvcnQgZ2VuZXJhdGVUZW1wbGF0ZXMgZnJvbSAnLi4vc3RhdGljL2dlbmVyYXRlVGVtcGxhdGVzJ1xuaW1wb3J0IGNsZWFuUHJvamVjdEZpbGVzIGZyb20gJy4uL3N0YXRpYy9jbGVhblByb2plY3RGaWxlcydcbmltcG9ydCBjb3B5UHVibGljRmlsZXMgZnJvbSAnLi4vc3RhdGljL2NvcHlQdWJsaWNGaWxlcydcbmltcG9ydCB7IG91dHB1dEJ1aWxkU3RhdGUgfSBmcm9tICcuLi9zdGF0aWMvYnVpbGRTdGF0ZSdcblxuZXhwb3J0IGRlZmF1bHQgKGFzeW5jIGZ1bmN0aW9uIGJ1bmRsZShzdGF0ZSA9IHt9KSB7XG4gIGNvbnN0IHsgc3RhZ2luZywgZGVidWcsIGFuYWx5emUsIGlzQnVpbGRDb21tYW5kIH0gPSBzdGF0ZVxuICAvLyBlbnN1cmUgRU5WIHZhcmlhYmxlcyBhcmUgc2V0XG4gIGlmICh0eXBlb2YgcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICd1bmRlZmluZWQnICYmICFkZWJ1Zykge1xuICAgIHByb2Nlc3MuZW52Lk5PREVfRU5WID0gJ3Byb2R1Y3Rpb24nXG4gIH1cbiAgcHJvY2Vzcy5lbnYuUkVBQ1RfU1RBVElDX0VOViA9ICdwcm9kdWN0aW9uJ1xuICBwcm9jZXNzLmVudi5CQUJFTF9FTlYgPSAncHJvZHVjdGlvbidcblxuICBzdGF0ZS5zdGFnZSA9ICdwcm9kJ1xuXG4gIGNvbnNvbGUubG9nKFxuICAgIGBCdW5kbGluZyBhcHBsaWNhdGlvbiBmb3IgJHtzdGFnaW5nID8gJ1N0YWdpbmcnIDogJ1Byb2R1Y3Rpb24nfS4uLmBcbiAgKVxuICBjb25zb2xlLmxvZygnJylcblxuICBzdGF0ZSA9IGF3YWl0IGdldENvbmZpZyhzdGF0ZSlcbiAgc3RhdGUgPSBhd2FpdCBjbGVhblByb2plY3RGaWxlcyhzdGF0ZSlcbiAgc3RhdGUgPSBhd2FpdCBnZW5lcmF0ZUJyb3dzZXJQbHVnaW5zKHN0YXRlKVxuICBzdGF0ZSA9IGF3YWl0IGdldFJvdXRlcyhzdGF0ZSlcbiAgc3RhdGUgPSBhd2FpdCBleHRyYWN0VGVtcGxhdGVzKHN0YXRlKVxuICBzdGF0ZSA9IGF3YWl0IGdlbmVyYXRlVGVtcGxhdGVzKHN0YXRlKVxuICBzdGF0ZSA9IGF3YWl0IGNvcHlQdWJsaWNGaWxlcyhzdGF0ZSlcbiAgc3RhdGUgPSBhd2FpdCBidWlsZFByb2R1Y3Rpb25CdW5kbGVzKHN0YXRlKVxuICBzdGF0ZSA9IGF3YWl0IG91dHB1dEJ1aWxkU3RhdGUoc3RhdGUpXG5cbiAgaWYgKGFuYWx5emUpIHtcbiAgICBhd2FpdCBuZXcgUHJvbWlzZSgoKSA9PiB7fSlcbiAgfVxuXG4gIGlmICghaXNCdWlsZENvbW1hbmQpIHtcbiAgICBjb25zb2xlLmxvZyhgXG5Zb3VyIGFwcCBpcyBub3cgYnVuZGxlZCEgSGVyZSdzIHdoYXQgd2Ugc3VnZ2VzdCBkb2luZyBuZXh0OlxuXG4tIEV4cG9ydCB5b3VyIGFwcCBpbiBzdGFnaW5nIG1vZGUgdG8gdGVzdCBsb2NhbGx5XG4gIC0gJHtjaGFsay5ncmVlbigncmVhY3Qtc3RhdGljIGV4cG9ydCAtLXN0YWdlJyl9XG4tIEV4cG9ydCB5b3VyIGFwcCBpbiBwcm9kdWN0aW9uIG1vZGUgZm9yIGRpc3RyaWJ1dGlvblxuICAtICR7Y2hhbGsuZ3JlZW4oJ3JlYWN0LXN0YXRpYyBleHBvcnQnKX1cbi0gQW5hbHl6ZSB5b3VyIGFwcCdzIHdlYnBhY2sgYnVuZGxlc1xuICAtICR7Y2hhbGsuZ3JlZW4oJ3JlYWN0LXN0YXRpYyBidW5kbGUgLS1hbmFseXplJyl9XG5gKVxuICB9XG5cbiAgcmV0dXJuIHN0YXRlXG59KVxuIl19
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var _require = require('../utils/binHelper'),
    setIgnorePath = _require.setIgnorePath; // eslint-disable-next-line


var path = require('path');

var getConfig = require('./getConfig')["default"];

var _require2 = require('./components/RootComponents'),
    DefaultDocument = _require2.DefaultDocument;

var _require3 = require('../utils'),
    poolAll = _require3.poolAll;

var exportRoute = require('./exportRoute')["default"];

process.on('message', /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee3(state) {
    return _regenerator["default"].wrap(function _callee3$(_context3) {
      while (1) {
        switch (_context3.prev = _context3.next) {
          case 0:
            _context3.prev = 0;
            return _context3.delegateYield( /*#__PURE__*/_regenerator["default"].mark(function _callee2() {
              var _state, routes, Comp, DocumentTemplate, tasks, _loop, i;

              return _regenerator["default"].wrap(function _callee2$(_context2) {
                while (1) {
                  switch (_context2.prev = _context2.next) {
                    case 0:
                      _state = state, routes = _state.routes; // Get config again

                      _context2.next = 3;
                      return getConfig(state);

                    case 3:
                      state = _context2.sent;
                      setIgnorePath(state.config.paths.ARTIFACTS); // Use the node version of the app created with webpack
                      // eslint-disable-next-line

                      Comp = require(path.resolve(state.config.paths.ARTIFACTS, 'static-app.js'))["default"]; // Retrieve the document template

                      DocumentTemplate = state.config.Document || DefaultDocument;
                      tasks = [];

                      _loop = function _loop(i) {
                        var route = routes[i]; // eslint-disable-next-line

                        tasks.push( /*#__PURE__*/(0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee() {
                          return _regenerator["default"].wrap(function _callee$(_context) {
                            while (1) {
                              switch (_context.prev = _context.next) {
                                case 0:
                                  _context.next = 2;
                                  return exportRoute(_objectSpread(_objectSpread({}, state), {}, {
                                    route: route,
                                    Comp: Comp,
                                    DocumentTemplate: DocumentTemplate
                                  }));

                                case 2:
                                  if (process.connected) {
                                    process.send({
                                      type: 'tick'
                                    });
                                  }

                                case 3:
                                case "end":
                                  return _context.stop();
                              }
                            }
                          }, _callee);
                        })));
                      };

                      for (i = 0; i < routes.length; i++) {
                        _loop(i);
                      }

                      _context2.next = 12;
                      return poolAll(tasks, Number(state.config.outputFileRate));

                    case 12:
                      if (process.connected) {
                        process.send({
                          type: 'done'
                        });
                      }

                      process.exit();

                    case 14:
                    case "end":
                      return _context2.stop();
                  }
                }
              }, _callee2);
            })(), "t0", 2);

          case 2:
            _context3.next = 9;
            break;

          case 4:
            _context3.prev = 4;
            _context3.t1 = _context3["catch"](0);
            console.error(_context3.t1);

            if (process.connected) {
              process.send({
                type: 'error',
                payload: _context3.t1
              });
            }

            process.exit(1);

          case 9:
          case "end":
            return _context3.stop();
        }
      }
    }, _callee3, null, [[0, 4]]);
  }));

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}());
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdGF0aWMvZXhwb3J0Um91dGVzLnRocmVhZGVkLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJzZXRJZ25vcmVQYXRoIiwicGF0aCIsImdldENvbmZpZyIsIkRlZmF1bHREb2N1bWVudCIsInBvb2xBbGwiLCJleHBvcnRSb3V0ZSIsInByb2Nlc3MiLCJvbiIsInN0YXRlIiwicm91dGVzIiwiY29uZmlnIiwicGF0aHMiLCJBUlRJRkFDVFMiLCJDb21wIiwicmVzb2x2ZSIsIkRvY3VtZW50VGVtcGxhdGUiLCJEb2N1bWVudCIsInRhc2tzIiwiaSIsInJvdXRlIiwicHVzaCIsImNvbm5lY3RlZCIsInNlbmQiLCJ0eXBlIiwibGVuZ3RoIiwiTnVtYmVyIiwib3V0cHV0RmlsZVJhdGUiLCJleGl0IiwiY29uc29sZSIsImVycm9yIiwicGF5bG9hZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7ZUFBMEJBLE9BQU8sQ0FBQyxvQkFBRCxDO0lBQXpCQyxhLFlBQUFBLGEsRUFDUjs7O0FBQ0EsSUFBTUMsSUFBSSxHQUFHRixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxJQUFNRyxTQUFTLEdBQUdILE9BQU8sQ0FBQyxhQUFELENBQVAsV0FBbEI7O2dCQUM0QkEsT0FBTyxDQUFDLDZCQUFELEM7SUFBM0JJLGUsYUFBQUEsZTs7Z0JBQ1lKLE9BQU8sQ0FBQyxVQUFELEM7SUFBbkJLLE8sYUFBQUEsTzs7QUFDUixJQUFNQyxXQUFXLEdBQUdOLE9BQU8sQ0FBQyxlQUFELENBQVAsV0FBcEI7O0FBRUFPLE9BQU8sQ0FBQ0MsRUFBUixDQUFXLFNBQVg7QUFBQSwyRkFBc0Isa0JBQU1DLEtBQU47QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLCtCQUVDQSxLQUZELEVBRVZDLE1BRlUsVUFFVkEsTUFGVSxFQUdsQjs7QUFIa0I7QUFBQSw2QkFLSlAsU0FBUyxDQUFDTSxLQUFELENBTEw7O0FBQUE7QUFLbEJBLHNCQUFBQSxLQUxrQjtBQU9sQlIsc0JBQUFBLGFBQWEsQ0FBQ1EsS0FBSyxDQUFDRSxNQUFOLENBQWFDLEtBQWIsQ0FBbUJDLFNBQXBCLENBQWIsQ0FQa0IsQ0FTbEI7QUFDQTs7QUFDTUMsc0JBQUFBLElBWFksR0FXTGQsT0FBTyxDQUFDRSxJQUFJLENBQUNhLE9BQUwsQ0FDbkJOLEtBQUssQ0FBQ0UsTUFBTixDQUFhQyxLQUFiLENBQW1CQyxTQURBLEVBRW5CLGVBRm1CLENBQUQsQ0FBUCxXQVhLLEVBZWxCOztBQUNNRyxzQkFBQUEsZ0JBaEJZLEdBZ0JPUCxLQUFLLENBQUNFLE1BQU4sQ0FBYU0sUUFBYixJQUF5QmIsZUFoQmhDO0FBa0JaYyxzQkFBQUEsS0FsQlksR0FrQkosRUFsQkk7O0FBQUEsNkNBbUJUQyxDQW5CUztBQW9CaEIsNEJBQU1DLEtBQUssR0FBR1YsTUFBTSxDQUFDUyxDQUFELENBQXBCLENBcEJnQixDQXFCaEI7O0FBQ0FELHdCQUFBQSxLQUFLLENBQUNHLElBQU4sNkZBQVc7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEseUNBQ0hmLFdBQVcsaUNBQ1pHLEtBRFk7QUFFZlcsb0NBQUFBLEtBQUssRUFBTEEsS0FGZTtBQUdmTixvQ0FBQUEsSUFBSSxFQUFKQSxJQUhlO0FBSWZFLG9DQUFBQSxnQkFBZ0IsRUFBaEJBO0FBSmUscUNBRFI7O0FBQUE7QUFPVCxzQ0FBSVQsT0FBTyxDQUFDZSxTQUFaLEVBQXVCO0FBQ3JCZixvQ0FBQUEsT0FBTyxDQUFDZ0IsSUFBUixDQUFhO0FBQUVDLHNDQUFBQSxJQUFJLEVBQUU7QUFBUixxQ0FBYjtBQUNEOztBQVRRO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLHlCQUFYO0FBdEJnQjs7QUFtQmxCLDJCQUFTTCxDQUFULEdBQWEsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHVCxNQUFNLENBQUNlLE1BQTNCLEVBQW1DTixDQUFDLEVBQXBDLEVBQXdDO0FBQUEsOEJBQS9CQSxDQUErQjtBQWN2Qzs7QUFqQ2lCO0FBQUEsNkJBa0NaZCxPQUFPLENBQUNhLEtBQUQsRUFBUVEsTUFBTSxDQUFDakIsS0FBSyxDQUFDRSxNQUFOLENBQWFnQixjQUFkLENBQWQsQ0FsQ0s7O0FBQUE7QUFtQ2xCLDBCQUFJcEIsT0FBTyxDQUFDZSxTQUFaLEVBQXVCO0FBQ3JCZix3QkFBQUEsT0FBTyxDQUFDZ0IsSUFBUixDQUFhO0FBQUVDLDBCQUFBQSxJQUFJLEVBQUU7QUFBUix5QkFBYjtBQUNEOztBQUNEakIsc0JBQUFBLE9BQU8sQ0FBQ3FCLElBQVI7O0FBdENrQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFBQTtBQUFBO0FBQUE7O0FBQUE7QUFBQTtBQUFBO0FBd0NsQkMsWUFBQUEsT0FBTyxDQUFDQyxLQUFSOztBQUNBLGdCQUFJdkIsT0FBTyxDQUFDZSxTQUFaLEVBQXVCO0FBQ3JCZixjQUFBQSxPQUFPLENBQUNnQixJQUFSLENBQWE7QUFBRUMsZ0JBQUFBLElBQUksRUFBRSxPQUFSO0FBQWlCTyxnQkFBQUEsT0FBTztBQUF4QixlQUFiO0FBQ0Q7O0FBQ0R4QixZQUFBQSxPQUFPLENBQUNxQixJQUFSLENBQWEsQ0FBYjs7QUE1Q2tCO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQXRCOztBQUFBO0FBQUE7QUFBQTtBQUFBIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBzZXRJZ25vcmVQYXRoIH0gPSByZXF1aXJlKCcuLi91dGlscy9iaW5IZWxwZXInKVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5jb25zdCBnZXRDb25maWcgPSByZXF1aXJlKCcuL2dldENvbmZpZycpLmRlZmF1bHRcbmNvbnN0IHsgRGVmYXVsdERvY3VtZW50IH0gPSByZXF1aXJlKCcuL2NvbXBvbmVudHMvUm9vdENvbXBvbmVudHMnKVxuY29uc3QgeyBwb29sQWxsIH0gPSByZXF1aXJlKCcuLi91dGlscycpXG5jb25zdCBleHBvcnRSb3V0ZSA9IHJlcXVpcmUoJy4vZXhwb3J0Um91dGUnKS5kZWZhdWx0XG5cbnByb2Nlc3Mub24oJ21lc3NhZ2UnLCBhc3luYyBzdGF0ZSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyByb3V0ZXMgfSA9IHN0YXRlXG4gICAgLy8gR2V0IGNvbmZpZyBhZ2FpblxuXG4gICAgc3RhdGUgPSBhd2FpdCBnZXRDb25maWcoc3RhdGUpXG5cbiAgICBzZXRJZ25vcmVQYXRoKHN0YXRlLmNvbmZpZy5wYXRocy5BUlRJRkFDVFMpXG5cbiAgICAvLyBVc2UgdGhlIG5vZGUgdmVyc2lvbiBvZiB0aGUgYXBwIGNyZWF0ZWQgd2l0aCB3ZWJwYWNrXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgY29uc3QgQ29tcCA9IHJlcXVpcmUocGF0aC5yZXNvbHZlKFxuICAgICAgc3RhdGUuY29uZmlnLnBhdGhzLkFSVElGQUNUUyxcbiAgICAgICdzdGF0aWMtYXBwLmpzJ1xuICAgICkpLmRlZmF1bHRcbiAgICAvLyBSZXRyaWV2ZSB0aGUgZG9jdW1lbnQgdGVtcGxhdGVcbiAgICBjb25zdCBEb2N1bWVudFRlbXBsYXRlID0gc3RhdGUuY29uZmlnLkRvY3VtZW50IHx8IERlZmF1bHREb2N1bWVudFxuXG4gICAgY29uc3QgdGFza3MgPSBbXVxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcm91dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCByb3V0ZSA9IHJvdXRlc1tpXVxuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXG4gICAgICB0YXNrcy5wdXNoKGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgZXhwb3J0Um91dGUoe1xuICAgICAgICAgIC4uLnN0YXRlLFxuICAgICAgICAgIHJvdXRlLFxuICAgICAgICAgIENvbXAsXG4gICAgICAgICAgRG9jdW1lbnRUZW1wbGF0ZSxcbiAgICAgICAgfSlcbiAgICAgICAgaWYgKHByb2Nlc3MuY29ubmVjdGVkKSB7XG4gICAgICAgICAgcHJvY2Vzcy5zZW5kKHsgdHlwZTogJ3RpY2snIH0pXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfVxuICAgIGF3YWl0IHBvb2xBbGwodGFza3MsIE51bWJlcihzdGF0ZS5jb25maWcub3V0cHV0RmlsZVJhdGUpKVxuICAgIGlmIChwcm9jZXNzLmNvbm5lY3RlZCkge1xuICAgICAgcHJvY2Vzcy5zZW5kKHsgdHlwZTogJ2RvbmUnIH0pXG4gICAgfVxuICAgIHByb2Nlc3MuZXhpdCgpXG4gIH0gY2F0Y2ggKGVycikge1xuICAgIGNvbnNvbGUuZXJyb3IoZXJyKVxuICAgIGlmIChwcm9jZXNzLmNvbm5lY3RlZCkge1xuICAgICAgcHJvY2Vzcy5zZW5kKHsgdHlwZTogJ2Vycm9yJywgcGF5bG9hZDogZXJyIH0pXG4gICAgfVxuICAgIHByb2Nlc3MuZXhpdCgxKVxuICB9XG59KVxuIl19